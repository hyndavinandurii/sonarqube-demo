name: Petclinic CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  compile:
    name: Compile Code
    needs: checkout
    runs-on: ubuntu-latest
    steps:
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: adopt
          architecture: x64

      - name: Compile the project
        run: mvn clean compile

  test:
    name: Run Test Cases
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: mvn test

  sonarqube:
    name: SonarQube Analysis
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up SonarQube
        run: |
          curl -sSL "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-linux.zip" -o sonar-scanner.zip
          unzip sonar-scanner.zip -d .
          echo "sonar.host.url=${{ secrets.SONAR_HOST_URL }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
          echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
          ./sonar-scanner-5.0.0.2966-linux/bin/sonar-scanner -Dsonar.projectName=Petclinic -Dsonar.java.binaries=target/classes -Dsonar.projectKey=Petclinic


  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Package the application
        run: mvn clean install

  docker-build-push:
    name: Docker Build & Push
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t image1 .
          docker tag image1 ${{ secrets.DOCKER_USERNAME }}/pet-clinic123:latest

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/pet-clinic123:latest

  trivy:
    name: Run Trivy Scan
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Trivy Scan
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/pet-clinic123:latest

  deploy:
    name: Deploy Application to Tomcat
    needs: trivy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy WAR File
        run: cp ./target/petclinic.war /opt/apache-tomcat-9.0.65/webapps/
