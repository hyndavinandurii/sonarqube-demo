name: SonarQube-Scan and Dockerize

on:
  workflow_dispatch:

jobs:
  sonarqube:
    name: SonarQube Trigger
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'adopt'
        architecture: x64

    - name: Install dependencies
      run: |
        ./mvnw clean install

    - name: Delete SonarQube cache
      run: |
        if [ -d $HOME/.sonar ]; then
          rm -rf $HOME/.sonar
        fi

    - name: SonarQube Scan
      run: |
        curl -sSL "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-linux.zip" -o sonar-scanner.zip
        unzip sonar-scanner.zip -d .        
        echo "sonar.host.url=${{ secrets.SONAR_HOST_URL }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.projectKey=my-java-app" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        ./sonar-scanner-5.0.0.2966-linux/bin/sonar-scanner

  build:
    name: Build and Dockerize Application
    needs: sonarqube
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker

    - name: Build Docker image
      run: |
        docker build -t venkatahyndavi/my-java-app .

    - name: Log in to Docker Hub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        docker tag venkatahyndavi/my-java-app:latest ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest
